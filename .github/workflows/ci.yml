name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-format-build:
    name: Lint, Format & Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: TypeScript type check
        run: yarn type-check

      - name: ESLint check
        run: yarn lint:check

      - name: Prettier format check
        run: yarn format:check

      - name: Build application
        run: yarn build
        env:
          NODE_ENV: production

      - name: Run validation suite
        run: yarn validate

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: lint-format-build

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run security audit
        run: yarn audit --level moderate

  bundle-analysis:
    name: Bundle Analysis
    runs-on: ubuntu-latest
    needs: lint-format-build
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build for analysis
        run: yarn build
        env:
          NODE_ENV: production

      - name: Analyze bundle size
        run: |
          echo "üìä Bundle Analysis:"
          du -sh .next/ || echo "Build folder not found"
          echo "‚úÖ Bundle analysis completed"

  notify-status:
    name: Notify Status
    runs-on: ubuntu-latest
    needs: [lint-format-build, security-audit]
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Report Status
        run: |
          if [[ "${{ needs.lint-format-build.result }}" == "success" && "${{ needs.security-audit.result }}" == "success" ]]; then
            echo "‚úÖ All checks passed! Ready for deployment."
            echo "üöÄ Your code is ready to be merged and deployed!"
          else
            echo "‚ùå Some checks failed. Please review the errors above."
            exit 1
          fi
